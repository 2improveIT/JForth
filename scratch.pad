: NESTED cr 0 do dup  0 do cr j . i . loop loop drop ;
5 6 NESTED
---------------------------------------------------------

: test variable hello hello ! hello @ length fact 0 do i 1 + . sp "->" . sp hello @ i permute . cr loop ;

\ -- aufruf: {1,2,3,4} test

: test variable hello hello ! hello @ length
    fact 0 ;

1 2 3 4 5 6 7 8 9 10

//////////////////////////////////////////////////////////////

"filling array with 25 random double values" . 1000.0 range ! fill cr
"content of array before sort: " . cr show cr
bubbleSort
"content of array after sort: " . cr show cr

variable characters "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" characters !

: randomString
  ""
  15 random 0 do
    characters @ dup length random dup 1+ subString +
  loop
;

: stringFill
  size 0
  do
    randomString i values !
  loop
;


"filling array with 25 random strings" . stringFill cr
"content of array before sort: " . cr show cr
bubbleSort
"content of array after sort: " . cr show cr

//                if (word.startsWith("\"") && word.length() > 1) {
//                    if (word.endsWith("\"")) {
//                        word = word.substring(1, word.length() - 1);
//                        tsb = new StringBuilder();
//                        tsb_state = 0;
//                    }
//                    else {
//                        tsb.append(word.substring(1));
//                        tsb_state = 1;
//                        tokenizer.nextToken();
//                        continue;
//                    }
//                }
//                if (word.endsWith("\"")) {
//                    if (word.length() >1)
//                        tsb.append(' ').append(word.substring(0, word.length() - 1));
//                    word = tsb.toString();
//                    tsb = new StringBuilder();
//                    tsb_state = 0;
//                }
//                if (tsb_state == 1) {
//                    tsb.append(' ').append(word);
//                    tokenizer.nextToken();
//                    continue;
//                }
